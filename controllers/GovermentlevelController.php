<?php

namespace app\controllers;

use Yii;
use app\models\Govermentlevel;
use app\models\GovermentLevelSearch;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * GovermentlevelController implements the CRUD actions for Govermentlevel model.
 */
class GovermentlevelController extends Controller
{
    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    /**
     * Lists all Govermentlevel models.
     * @return mixed
     */
    public function actionIndex()
    {
        return $this->render('index');
    }

    /**
     * Displays a single Govermentlevel model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Govermentlevel model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Govermentlevel();
        $post = Yii::$app->request->post();
        if (!$model->load($post)) return json_encode(["error" => "parse error " . json_encode($post)]);
        if (!$model->save()) return json_encode(['error' => json_encode($model->errors)]);
        return json_encode(['model' => json_encode($model->attributes)]);
    }

    /**
     * Updates an existing Govermentlevel model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
        $model = $this->findModel($id);
        $post = Yii::$app->request->post();
        if (!$model->load($post)) return json_encode(["error" => "parse error " . json_encode($post)]);
        if (!$model->save()) return json_encode(['error' => json_encode($model->errors)]);
        return json_encode(['model' => json_encode($model->attributes)]);
    }

    public function actionGetall() {
        return json_encode(Govermentlevel::find()->select("*")->asArray()->all());
    }

    /**
     * Deletes an existing Govermentlevel model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete()
    {
        $post = Yii::$app->request->post();
        if(isset($post['id'])) {
            $model = $this->findModel($post['id']);
            $model->deleted = 1;
            return json_encode($model->save() ? ["result" => "ok"]:["error" => json_encode($model->errors)]);
        }
    }

    /**
     * Finds the Govermentlevel model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Govermentlevel the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Govermentlevel::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }
}
